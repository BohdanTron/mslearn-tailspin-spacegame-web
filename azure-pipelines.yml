trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  appName: 'Tailspin.SpaceGame.Web'
  dotnetSdkVersion: '6.x'

stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs:
      - job: 'Build'
        displayName: 'Build job'
        pool:
          vmImage: 'ubuntu-20.04'
          demands: 
          - npm

        variables: 
          wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'

        steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK $(dotnetSdkVersion)'
          inputs:
            packageType: sdk
            version: '6.x'

        - task: Npm@1
          displayName: 'Run npm install'
          inputs:
            verbose: false

        - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
          displayName: 'Compile Sass assets'

        - task: gulp@1
          displayName: 'Run gulp tasks'

        - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
          displayName: 'Write build info'
          workingDirectory: $(wwwrootDir)

        - task: DotNetCoreCLI@2
          displayName: 'Restore project dependencies'
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - template: templates/build.yml
          parameters:
            buildConfiguration: 'Release'

        - publish: '$(Build.ArtifactStagingDirectory)'
          artifact: drop

  - stage: 'Dev'
    displayName: 'Deploy to the dev environment'
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
      )
    jobs:
    - deployment: DeployDev
      pool:
        vmImage: 'ubuntu-20.04'
      environment: dev
      variables:
      - group: Release
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - task: AzureWebApp@1
              displayName: 'Azure App Service Deploy: website'
              inputs:
                azureSubscription: 'Resource Manager - Tailspin - Space Game'
                appName: '$(WebAppNameDev)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/$(appName).zip'

  - stage: 'Test'
    displayName: 'Deploy to the test environment'
    dependsOn: Dev
    jobs:
    - deployment: DeployTest
      pool:
        vmImage: 'ubuntu-20.04'
      environment: test
      variables:
      - group: 'Release'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - task: AzureWebApp@1
              displayName: 'Azure App Service Deploy: website'
              inputs:
                azureSubscription: 'Resource Manager - Tailspin - Space Game'
                appName: '$(WebAppNameTest)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/$(appName).zip'

    - job: RunUITests
      dependsOn: DeployTest
      displayName: 'Run UI tests'
      condition: false
      pool:
        vmImage: 'windows-2019'
      variables:
        - group: 'Release'
      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK $(dotnetSdkVersion)'
          inputs:
            packageType: sdk
            version: '6.x'

        - task: DotNetCoreCLI@2
          displayName: 'Build the project - $(dotnetSdkVersion)'
          inputs:
            command: 'build'
            arguments: '--configuration $(buildConfiguration)'
            projects: '$(System.DefaultWorkingDirectory)/**/Tailspin.SpaceGame.Web.UITests.csproj'
        
        - task: DotNetCoreCLI@2
          displayName: 'Run UI tests - $(buildConfiguration)'
          inputs:
            command: 'test'
            arguments: '--no-build --configuration $(buildConfiguration)'
            publishTestResults: true
            projects: '$(System.DefaultWorkingDirectory)/**/Tailspin.SpaceGame.Web.UITests.csproj'
          timeoutInMinutes: 2
    
  - stage: 'Staging'
    displayName: 'Deploy to the staging environment'
    dependsOn: Test
    jobs:
    - deployment: DeployStaging
      pool:
        vmImage: 'ubuntu-20.04'
      environment: staging
      variables:
      - group: 'Release'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - task: AzureWebApp@1
              displayName: 'Azure App Service Deploy: website'
              inputs:
                azureSubscription: 'Resource Manager - Tailspin - Space Game'
                appName: '$(WebAppNameStaging)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/$(appName).zip'
  