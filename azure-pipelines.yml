trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  releaseBranchName: 'release'
  appName: 'Tailspin.SpaceGame.Web'
  dotnetSdkVersion: '6.x'

stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs:
      - job: 'Build'
        displayName: 'Build job'
        pool:
          vmImage: 'ubuntu-20.04'
          demands: 
          - npm

        variables: 
          wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'

        steps:
          - template: template/build-frontend.yml
          
          - template: templates/build-dotnet.yml
            parameters:
              dotnetSdkVersion: '$(dotnetSdkVersion)'

          - publish: '$(Build.ArtifactStagingDirectory)'
            artifact: drop

  - stage: 'Dev'
    displayName: 'Deploy to the dev environment'
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
      )
    jobs:
      - template: templates/deploy.yml
        parameters:
          deploymentName: DeployDev
          environment: dev
          webAppName: '$(WebAppNameDev)'
          appName: '$(appName)'

  - stage: 'Test'
    displayName: 'Deploy to the test environment'
    dependsOn: Dev
    jobs:
      - template: templates/deploy.yml
        parameters:
          deploymentName: DeployTest
          environment: test
          webAppName: '$(WebAppNameTest)'
          appName: '$(appName)'

      - template: templates/run-ui-tests.yml
        parameters:
          dependsOn: DeployTest
          dotnetSdkVersion: '$(dotnetSdkVersion)'
    
  - stage: 'Staging'
    displayName: 'Deploy to the staging environment'
    dependsOn: Test
    jobs:
      - template: templates/deploy.yml
        parameters:
          deploymentName: DeployStaging
          environment: staging
          webAppName: '$(WebAppNameStaging)'
          appName: '$(appName)'